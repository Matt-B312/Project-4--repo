{"ast":null,"code":"import _toConsumableArray from\"/Users/mlebreton/Desktop/memories_project/cilent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/mlebreton/Desktop/memories_project/cilent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{FETCH_ALL,CREATE,UPDATE,DELETE,FETCH_BY_SEARCH,LIKE,START_LOADING,END_LOADING,FETCH_POST,COMMENT}from'../constants/actionTypes';export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,posts:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case START_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:true});case END_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:false});case FETCH_ALL:return _objectSpread(_objectSpread({},state),{},{posts:action.payload.data,currentPage:action.payload.currentPage,numberOfPages:action.payload.numberOfPages});case FETCH_BY_SEARCH:return _objectSpread(_objectSpread({},state),{},{posts:action.payload});case FETCH_POST:return _objectSpread(_objectSpread({},state),{},{post:action.payload});case LIKE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case COMMENT:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){if(post._id===action.payload._id)return action.payload;return post;})});case CREATE:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case UPDATE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case DELETE:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});default:return state;}});","map":{"version":3,"sources":["/Users/mlebreton/Desktop/memories_project/cilent/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","LIKE","START_LOADING","END_LOADING","FETCH_POST","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"qVAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,eAA5C,CAA6DC,IAA7D,CAAmEC,aAAnE,CAAkFC,WAAlF,CAA+FC,UAA/F,CAA2GC,OAA3G,KAA0H,0BAA1H,CAEA,eAAe,UAAoD,IAAnDC,CAAAA,KAAmD,2DAA3C,CAAEC,SAAS,CAAE,IAAb,CAAmBC,KAAK,CAAE,EAA1B,CAA2C,IAAXC,CAAAA,MAAW,2CAC/D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKR,CAAAA,aAAL,CACI,sCAAYI,KAAZ,MAAmBC,SAAS,CAAE,IAA9B,GACJ,IAAKJ,CAAAA,WAAL,CACI,sCAAYG,KAAZ,MAAmBC,SAAS,CAAE,KAA9B,GACJ,IAAKX,CAAAA,SAAL,CACI,sCACOU,KADP,MAEIE,KAAK,CAAEC,MAAM,CAACE,OAAP,CAAeC,IAF1B,CAGIC,WAAW,CAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHhC,CAIIC,aAAa,CAAEL,MAAM,CAACE,OAAP,CAAeG,aAJlC,GAMJ,IAAKd,CAAAA,eAAL,CACI,sCAAYM,KAAZ,MAAmBE,KAAK,CAAEC,MAAM,CAACE,OAAjC,GACJ,IAAKP,CAAAA,UAAL,CACI,sCAAYE,KAAZ,MAAmBS,IAAI,CAAEN,MAAM,CAACE,OAAhC,GACJ,IAAKV,CAAAA,IAAL,CACI,sCAAYK,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,CAAkCR,MAAM,CAACE,OAAzC,CAAmDI,IAA9D,EAAhB,CAA1B,GACJ,IAAKV,CAAAA,OAAL,CACI,sCAAYC,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,CAAU,CAChD,GAAGA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA/B,CAAoC,MAAOR,CAAAA,MAAM,CAACE,OAAd,CAEpC,MAAOI,CAAAA,IAAP,CACH,CAJyB,CAA1B,GAKJ,IAAKlB,CAAAA,MAAL,CACI,sCAAYS,KAAZ,MAAmBE,KAAK,8BAAMF,KAAK,CAACE,KAAZ,GAAmBC,MAAM,CAACE,OAA1B,EAAxB,GACJ,IAAKb,CAAAA,MAAL,CACI,sCAAYQ,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,CAAkCR,MAAM,CAACE,OAAzC,CAAmDI,IAA9D,EAAhB,CAA1B,GACJ,IAAKhB,CAAAA,MAAL,CACI,sCAAYO,KAAZ,MAAmBE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAmB,SAACH,IAAD,QAAUA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAA9B,EAAnB,CAA1B,GAKJ,QACI,MAAOL,CAAAA,KAAP,CAnCR,CAqCH,CAtCD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, LIKE, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch (action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true };\n        case END_LOADING:\n            return { ...state, isLoading: false };\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            } \n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload };\n        case FETCH_POST:\n            return { ...state, post: action.payload };\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n        case COMMENT:\n            return { ...state, posts: state.posts.map((post) => {\n                if(post._id === action.payload._id) return action.payload;\n                \n                return post;\n            }),};\n        case CREATE:\n            return { ...state, posts: [...state.posts, action.payload] };\n        case UPDATE:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n        \n        \n        \n        \n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}