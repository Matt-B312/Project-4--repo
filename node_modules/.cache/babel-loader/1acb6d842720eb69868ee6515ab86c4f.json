{"ast":null,"code":"var _jsxFileName = \"/Users/mlebreton/Documents/bootcamp/codealong/memories_project/cilent/src/components/Form/Form.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\n\nconst Form = () => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n\n  const handleSubmit = () => {};\n\n  const clear = () => {}; //     return (\n  //         <Paper className ={classes.paper}>\n  //             <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n  //                 <Typography varient='h6'>Creating a Memory</Typography>\n  //                 <TextField \n  //                 name='creator' \n  //                 varient='outlined' \n  //                 label=\"Creator\" \n  //                 fullWidth \n  //                 value={postData.creator}\n  //                 onChange={(e) => setPostData({ ...postData, creator: e.target.value})}/>\n  //                 <TextField \n  //                 name='title' \n  //                 varient='outlined' \n  //                 label=\"Title\" \n  //                 fullWidth \n  //                 value={postData.title}\n  //                 onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\n  //                 <TextField \n  //                 name='message' \n  //                 varient='outlined' \n  //                 label=\"Message\" \n  //                 fullWidth \n  //                 value={postData.message}\n  //                 onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\n  //                 <TextField \n  //                 name='tags' \n  //                 varient='outlined' \n  //                 label=\"Tags\" \n  //                 fullWidth \n  //                 value={postData.tags}\n  //                 onChange={(e) => setPostData({ ...postData, tags: e.target.value})}/>\n  //                 <div className={classes.fileInput}>\n  //                     <FileBase\n  //                         type='file'\n  //                         multiple={false}\n  //                         onDone={({base64}) => setPostData({ ...postData,selectedFile: base64})}\n  //                     />\n  //                     <Button className={classes.buttonSubmit} varient=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n  //                     <Button varient=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n  //                 </div>\n  //             </form>\n  //         </Paper>\n  //     );\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref => {\n      let {\n        base64\n      } = _ref;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/mlebreton/Documents/bootcamp/codealong/memories_project/cilent/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useStyles","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","handleSubmit","clear","paper","root","form","currentId","post","e","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\n    \n\nconst Form = () => {\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    })\n\n    const classes = useStyles();\n\n    const handleSubmit = () => {\n\n    }\n\n    const clear = () => {\n\n    }\n\n//     return (\n//         <Paper className ={classes.paper}>\n//             <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n//                 <Typography varient='h6'>Creating a Memory</Typography>\n//                 <TextField \n//                 name='creator' \n//                 varient='outlined' \n//                 label=\"Creator\" \n//                 fullWidth \n//                 value={postData.creator}\n//                 onChange={(e) => setPostData({ ...postData, creator: e.target.value})}/>\n//                 <TextField \n//                 name='title' \n//                 varient='outlined' \n//                 label=\"Title\" \n//                 fullWidth \n//                 value={postData.title}\n//                 onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\n//                 <TextField \n//                 name='message' \n//                 varient='outlined' \n//                 label=\"Message\" \n//                 fullWidth \n//                 value={postData.message}\n//                 onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\n//                 <TextField \n//                 name='tags' \n//                 varient='outlined' \n//                 label=\"Tags\" \n//                 fullWidth \n//                 value={postData.tags}\n//                 onChange={(e) => setPostData({ ...postData, tags: e.target.value})}/>\n//                 <div className={classes.fileInput}>\n//                     <FileBase\n//                         type='file'\n//                         multiple={false}\n//                         onDone={({base64}) => setPostData({ ...postData,selectedFile: base64})}\n//                     />\n//                     <Button className={classes.buttonSubmit} varient=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n//                     <Button varient=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n//                 </div>\n//             </form>\n//         </Paper>\n//     );\n// }\nreturn (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}