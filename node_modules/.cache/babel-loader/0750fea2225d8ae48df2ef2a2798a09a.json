{"ast":null,"code":"var _jsxFileName = \"/Users/mlebreton/Desktop/memories_project/cilent/src/components/PostDetails/CommentSection.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts';\n\nconst CommentSection = _ref => {\n  var _user$result;\n\n  let {\n    post\n  } = _ref;\n  const classes = useStyles();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState('');\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n\n  const handleComment = async () => {\n    const finalComment = `${user.result.name}: ${comment}`;\n    const newComments = await dispatch(commentPost(finalComment, post._id));\n    setComments(newComments);\n    setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, c))), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    varient: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    minRows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/mlebreton/Desktop/memories_project/cilent/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","dispatch","handleComment","finalComment","result","name","newComments","_id","commentsOuterContainer","commentsInnerContainer","map","c","i","width","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts';\n\n\nconst CommentSection = ({ post }) => {\n    \n    const classes = useStyles();\n    const [comments, setComments] = useState(post?.comments);\n    const [comment, setComment] = useState('');\n    const user = JSON.parse(localStorage.getItem('profile'));\n    const dispatch = useDispatch();\n\n    const handleComment = async () => {\n        const finalComment = `${user.result.name}: ${comment}`;\n        const newComments = await dispatch(commentPost(finalComment, post._id));\n\n        setComments(newComments);\n        setComment('');\n    };\n\n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                <Typography gutterBottom variant=\"h6\">Comments</Typography>\n                    {comments?.map((c, i) => (\n                <Typography key={i} gutterBottom variant=\"subtitle1\">\n                    {c}\n                </Typography>\n                    ))}\n                </div>\n                {user?.result?.name && (\n                <div style={{ width: '70%'}}>\n                    <Typography gutterBottom varient='h6'>Write a comment</Typography>\n                    <TextField \n                        fullWidth\n                        minRows={4}\n                        variant='outlined'\n                        label='Comment'\n                        multiline\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                    />\n                    <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n                        Comment\n                    </Button>\n                </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}