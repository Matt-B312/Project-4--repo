{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH_BY_SEARCH:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id === action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/mlebreton/Desktop/memories_project/cilent/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,eAA5C,EAA6DC,IAA7D,QAAyE,0BAAzE;AAEA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AACI,aAAOO,MAAM,CAACE,OAAd;;AACJ,SAAKL,eAAL;AACI,aAAOG,MAAM,CAACE,OAAd;;AACJ,SAAKJ,IAAL;AACI,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAKV,MAAL;AACI,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKP,MAAL;AACI,aAAOI,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAKR,MAAL;AACI,aAAOG,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AAKJ;AACI,aAAOH,KAAP;AAlBR;AAoBH,CArBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case FETCH_BY_SEARCH:\n            return action.payload;\n        case LIKE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case DELETE:\n            return posts.filter((post) => post._id === action.payload);\n        \n        \n        \n        \n        default:\n            return posts;\n    }\n};"]},"metadata":{},"sourceType":"module"}