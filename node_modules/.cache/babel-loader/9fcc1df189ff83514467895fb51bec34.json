{"ast":null,"code":"var _jsxFileName = \"/Users/mlebreton/Documents/bootcamp/codealong/memories_project/cilent/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Typography, Avatar, Button, Paper, Grid, Container, TextField } from '@material-ui/core';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const isSignup = true;\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    varient: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/mlebreton/Documents/bootcamp/codealong/memories_project/cilent/src/components/Auth/Auth.js"],"names":["React","useState","Typography","Avatar","Button","Paper","Grid","Container","TextField","useStyles","LockOutlinedIcon","Input","Auth","classes","showPassword","setShowPassword","isSignup","handleShowPassword","prevShowPassword","handleSubmit","handleChange","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Typography, Avatar, Button, Paper, Grid, Container, TextField } from '@material-ui/core';\nimport useStyles from './styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\n\nconst Auth = () => {\n    const classes =useStyles();\n    const [showPassword, setShowPassword] = useState(false); \n\n    const isSignup = true;\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n        <Paper className={classes.paper} elevation={3}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography varient='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    {\n                        isSignup && (\n                            <>\n                                <TextField name='firstName' label='First Name' handleChange={handleChange} autoFocus half />\n                                <TextField name='lastName' label='Last Name' handleChange={handleChange} half />\n                            </>\n                        )\n                    }\n                    <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n                    <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                    { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='Password' />}\n                </Grid>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    { isSignup ? 'Sign Up' : 'Sign In' }\n                </Button>\n            </form>\n        </Paper>\n    </Container>\n  )\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}