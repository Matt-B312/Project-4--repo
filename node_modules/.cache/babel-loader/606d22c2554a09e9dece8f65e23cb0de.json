{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes';\nimport * as api from '../api';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/mlebreton/Desktop/memories_project/cilent/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","api","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","deletePost","likePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes';\nimport * as api from '../api';\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.fetchPost(id);\n        console.log(data);\n        dispatch({ type: FETCH_POST, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n};\n \nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.fetchPosts(page);\n        console.log(data);\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        console.log(data);\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const { data } = await api.createPost(post);\n\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const likePost = (id) => async(dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);        \n    }\n}"]},"metadata":{},"sourceType":"module"}